enum AuthStatus {
  WaitForEmailVerified
  WaitForEntry
  Available
}

type AuthDataResult {
  status: AuthStatus!
  token: String!
  user: UserInfo
}

type UserInfo implements TimestampEntity {
  id: ID!
  fullName: String!
  email: String!
  emailVerified: Boolean!
  isAppAdmin: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  publicProfile: PublicProfile!
}

type PublicProfile implements TimestampEntity {
  id: ID!
  displayName: String!
  photoURL: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input UserInfoInput {
  fullName: String!
  displayName: String!
}

type Mutation {
  setOwnUserInfo(input: UserInfoInput!): UserInfo!
  deleteOwnUser: Boolean!
}

type Query {
  authData: AuthDataResult!
}
