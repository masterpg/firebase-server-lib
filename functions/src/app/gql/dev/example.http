POST {{apiHost}}/gql_dev
Content-Type: application/json

{
  "operationName": "PutTestStoreData",
  "query": "mutation PutTestStoreData($inputs: [PutTestStoreDataInput!]!) { putTestStoreData(inputs: $inputs) }",
  "variables": {
    "inputs": [
      {
        "collectionName": "products",
        "collectionRecords": [
          {
            "id": "product1",
            "title": "iPad 4 Mini",
            "price": 500.01,
            "stock": 3,
            "createdAt": "2020-01-01 10:00:00",
            "updatedAt": "2020-01-02 12:00:00"
          },
          {
            "id": "product2",
            "title": "Fire HD 8 Tablet",
            "price": 80.99,
            "stock": 5,
            "createdAt": "2020-01-01",
            "updatedAt": "2020-01-02"
          },
          {
            "id": "product3",
            "title": "MediaPad T5 10",
            "price": 150.8,
            "stock": 10,
            "createdAt": "2020-01-01",
            "updatedAt": "2020-01-02"
          }
        ]
      },
      {
        "collectionName": "cart",
        "collectionRecords": [
          {
            "id": "cartItem1",
            "uid": "general.user",
            "productId": "product1",
            "title": "iPad 4 Mini",
            "price": 500.01,
            "quantity": 1,
            "createdAt": "2020-01-01",
            "updatedAt": "2020-01-02"
          },
          {
            "id": "cartItem2",
            "uid": "general.user",
            "productId": "product2",
            "title": "Fire HD 8 Tablet",
            "price": 80.99,
            "quantity": 2,
            "createdAt": "2020-01-01",
            "updatedAt": "2020-01-02"
          }
        ]
      },
      {
        "collectionName": "persons",
        "collectionRecords": [
          {
            "id": "yamamoto_taro",
            "first": "Taro",
            "last": "Yamamoto",
            "phones": [
              {
                "id": "yamamoto_taro_phone1",
                "carrier": "docomo",
                "number": "090-9999-9999"
              },
              {
                "id": "yamamoto_taro_phone2",
                "carrier": "au",
                "number": "080-8888-8888"
              }
            ],
            "hobbies": [
              "programming",
              "movie watching"
            ]
          }
        ]
      }
    ]
  }
}

###

POST {{apiHost}}/gql_dev
Content-Type: application/json

{
  "operationName": "PutTestIndexData",
  "query": "mutation PutTestIndexData($input: PutTestIndexDataInput!) { putTestIndexData(input: $input) }",
  "variables": {
    "input": {
      "index": "storage-nodes-test",
      "data": [
        {
          "id" : "cMyStK4BBHy0VLD1BdMz",
          "nodeType" : "Dir",
          "name" : "d1",
          "dir" : "",
          "path" : "d1",
          "level" : 1,
          "contentType" : "",
          "size" : 0,
          "share" : {
            "isPublic" : null,
            "readUIds" : null,
            "writeUIds" : null
          },
          "version" : 1,
          "createdAt" : "2020-12-08T13:51:00.225Z",
          "updatedAt" : "2020-12-08T13:51:00.225Z"
        }
      ]
    }
  }
}

###

POST {{apiHost}}/gql_dev
Content-Type: application/json

{
  "operationName": "GetTestSignedUploadUrls",
  "query": "query GetTestSignedUploadUrls { testSignedUploadUrls(inputs: [{filePath: \"images/family.png\", contentType: \"image/png\"}]) }",
  "variables": {}
}

###

POST {{apiHost}}/gql_dev
Content-Type: application/json

{
  "operationName": "RemoveTestStorageFiles",
  "query": "mutation RemoveTestStorageFiles { removeTestStorageFiles(filePaths: [\"docs/memo.txt\"]) }",
  "variables": {}
}

###

POST {{apiHost}}/gql_dev
Content-Type: application/json

{
  "operationName": "RemoveTestStorageDir",
  "query": "mutation RemoveTestStorageDir { removeTestStorageDir(dirPath: \"dir1/dir1_1\") }",
  "variables": {}
}

###

POST {{apiHost}}/gql_dev
Content-Type: application/json

{
  "operationName": "SetTestFirebaseUsers",
  "query": "mutation SetTestFirebaseUsers($users: [TestFirebaseUserInput!]!) { setTestFirebaseUsers(users: $users) }",
  "variables": {
    "users": [
      {
        "uid": "test.general",
        "email": "test.general@example.com",
        "emailVerified": true,
        "password": "passpass",
        "displayName": "一般テストユーザー",
        "disabled": false
      }
    ]
  }
}

###

POST {{apiHost}}/gql_dev
Content-Type: application/json

{
  "operationName": "DeleteTestFirebaseUsers",
  "query": "mutation DeleteTestFirebaseUsers($uids: [String!]!) { deleteTestFirebaseUsers(uids: $uids) }",
  "variables": {
    "uids": ["test.general"]
  }
}

###

POST {{apiHost}}/gql_dev
Content-Type: application/json

{
  "operationName": "SetTestUsers",
  "query": "mutation SetTestUsers($users: [TestUserInput!]!) { setTestUsers(users: $users) { id fullName email emailVerified isAppAdmin createdAt updatedAt publicProfile { id displayName photoURL createdAt updatedAt } } }",
  "variables": {
    "users": [
      {
        "uid": "test.general",
        "email": "test.general@example.com",
        "emailVerified": true,
        "password": "passpass",
        "displayName": "一般ユーザー",
        "disabled": false,
        "fullName": "一般 太郎"
      }
    ]
  }
}

###

POST {{apiHost}}/gql_dev
Content-Type: application/json

{
  "operationName": "DeleteTestUsers",
  "query": "mutation DeleteTestUsers($uids: [String!]!) { deleteTestUsers(uids: $uids) }",
  "variables": {
    "uids": ["test.general"]
  }
}

###
