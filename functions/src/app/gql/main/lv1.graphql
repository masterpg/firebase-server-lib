#--------------------------------------------------
#  Env
#--------------------------------------------------

type Query {
  appConfig: AppConfig!
}

#--------------------------------------------------
#  Storage
#--------------------------------------------------

type Mutation {
  createStorageDir(dirPath: String!, input: CreateStorageNodeInput): StorageNode!
  createStorageHierarchicalDirs(dirPaths: [String!]!): [StorageNode!]!
  removeStorageFile(filePath: String!): StorageNode
  moveStorageFile(fromFilePath: String!, toFilePath: String!): StorageNode!
  renameStorageFile(filePath: String!, newName: String!): StorageNode!
  setStorageDirShareSettings(dirPath: String!, input: StorageNodeShareSettingsInput): StorageNode!
  setStorageFileShareSettings(filePath: String!, input: StorageNodeShareSettingsInput): StorageNode!
  handleUploadedFile(filePath: String!): StorageNode!
  createArticleTypeDir(input: CreateArticleTypeDirInput!): StorageNode!
  createArticleGeneralDir(dirPath: String!, input: CreateStorageNodeInput): StorageNode!
  renameArticleNode(nodePath: String!, newName: String!): StorageNode!
  setArticleSortOrder(nodePath: String!, input: SetArticleSortOrderInput!): StorageNode!
}

type Query {
  storageNode(input: StorageNodeKeyInput!): StorageNode
  storageNodes(input: StorageNodeKeysInput!): [StorageNode!]!
  storageDirDescendants(dirPath: String, input: StoragePaginationInput): StoragePaginationResult!
  storageDescendants(dirPath: String, input: StoragePaginationInput): StoragePaginationResult!
  storageDirChildren(dirPath: String, input: StoragePaginationInput): StoragePaginationResult!
  storageChildren(dirPath: String, input: StoragePaginationInput): StoragePaginationResult!
  storageHierarchicalNodes(nodePath: String!): [StorageNode!]!
  storageAncestorDirs(nodePath: String!): [StorageNode!]!
  signedUploadUrls(inputs: [SignedUploadUrlInput!]!): [String!]!
  articleChildren(dirPath: String!, articleTypes: [StorageArticleNodeType!]!, input: StoragePaginationInput): StoragePaginationResult!
}

#--------------------------------------------------
#  User
#--------------------------------------------------

type Mutation {
  setOwnUserInfo(input: UserInfoInput!): UserInfo!
  deleteOwnUser: Boolean!
}

type Query {
  authData: AuthDataResult!
}
