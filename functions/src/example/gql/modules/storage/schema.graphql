scalar DateTime

enum StorageNodeType {
  File
  Dir
}

input GetStorageOptionsInput {
  maxResults: Int
  pageToken: String
}

type GetStorageResult {
  list: [StorageNode!]!
  nextPageToken: String
}

type GetStorageDict {
  dict: [StorageNode!]!
  nextPageToken: String
}

type StorageNode {
  id: String!
  nodeType: StorageNodeType!
  name: String!
  dir: String!
  path: String!
  contentType: String!
  size: Int!
  share: StorageNodeShareSettings!
  created: DateTime!
  updated: DateTime!
}

type StorageNodeShareSettings {
  isPublic: Boolean
  uids: [String!]
}

input StorageNodeShareSettingsInput {
  isPublic: Boolean
  uids: [String!]
}

input SignedUploadUrlInput {
  filePath: String!
  contentType: String
}

type Mutation {
  handleUploadedUserFiles(filePaths: [String!]!): Boolean!
  createUserStorageDirs(dirPaths: [String!]!): [StorageNode!]!
  removeUserStorageDirs(dirPaths: [String!]!): Boolean!
  removeUserStorageFiles(filePaths: [String!]!): Boolean!
  moveUserStorageDir(fromDirPath: String!, toDirPath: String!): Boolean!
  moveUserStorageFile(fromFilePath: String!, toFilePath: String!): Boolean!
  renameUserStorageDir(dirPath: String!, newName: String!): Boolean!
  renameUserStorageFile(filePath: String!, newName: String!): Boolean!
  setUserStorageDirShareSettings(dirPath: String!, settings: StorageNodeShareSettingsInput): StorageNode!
  setUserStorageFileShareSettings(filePath: String!, settings: StorageNodeShareSettingsInput): StorageNode!

  handleUploadedFiles(filePaths: [String!]!): Boolean!
  createStorageDirs(dirPaths: [String!]!): [StorageNode!]!
  removeStorageDirs(dirPaths: [String!]!): Boolean!
  removeStorageFiles(filePaths: [String!]!): Boolean!
  moveStorageDir(fromDirPath: String!, toDirPath: String!): Boolean!
  moveStorageFile(fromFilePath: String!, toFilePath: String!): Boolean!
  renameStorageDir(dirPath: String!, newName: String!): Boolean!
  renameStorageFile(filePath: String!, newName: String!): Boolean!
  setStorageDirShareSettings(dirPath: String!, settings: StorageNodeShareSettingsInput): StorageNode!
  setStorageFileShareSettings(filePath: String!, settings: StorageNodeShareSettingsInput): StorageNode!
}

type Query {
  userStorageNode(nodePath: String!): StorageNode
  userStorageDirDescendants(dirPath: String, options: GetStorageOptionsInput): GetStorageResult!
  userStorageDescendants(dirPath: String, options: GetStorageOptionsInput): GetStorageResult!
  userStorageDirChildren(dirPath: String, options: GetStorageOptionsInput): GetStorageResult!
  userStorageChildren(dirPath: String, options: GetStorageOptionsInput): GetStorageResult!

  storageNode(nodePath: String!): StorageNode
  storageDirDescendants(dirPath: String, options: GetStorageOptionsInput): GetStorageResult!
  storageDescendants(dirPath: String, options: GetStorageOptionsInput): GetStorageResult!
  storageDirChildren(dirPath: String, options: GetStorageOptionsInput): GetStorageResult!
  storageChildren(dirPath: String, options: GetStorageOptionsInput): GetStorageResult!
  signedUploadUrls(inputs: [SignedUploadUrlInput!]!): [String!]!
}
