scalar DateTime

enum StorageNodeType {
  File
  Dir
}

type StorageNode {
  nodeType: StorageNodeType!
  name: String!
  dir: String!
  path: String!
  created: DateTime!
  updated: DateTime!
}

input SignedUploadUrlInput {
  filePath: String!
  contentType: String
}

type Mutation {
  createUserStorageDirs(dirPaths: [String!]!): [StorageNode!]!
  removeUserStorageDirs(dirPaths: [String!]!): [StorageNode!]!
  removeUserStorageFiles(filePaths: [String!]!): [StorageNode!]!
  moveUserStorageDir(dirPath: String!, toDirPath: String!): [StorageNode!]!
  moveUserStorageFile(filePath: String!, toFilePath: String!): StorageNode!
  renameUserStorageDir(dirPath: String!, newName: String!): [StorageNode!]!
  renameUserStorageFile(filePath: String!, newName: String!): StorageNode!

  createStorageDirs(dirPaths: [String!]!): [StorageNode!]!
  removeStorageDirs(dirPaths: [String!]!): [StorageNode!]!
  removeStorageFiles(filePaths: [String!]!): [StorageNode!]!
  moveStorageDir(dirPath: String!, toDirPath: String!): [StorageNode!]!
  moveStorageFile(filePath: String!, toFilePath: String!): StorageNode!
  renameStorageDir(dirPath: String!, newName: String!): [StorageNode!]!
  renameStorageFile(filePath: String!, newName: String!): StorageNode!
}

type Query {
  userStorageDirNodes(dirPath: String): [StorageNode!]!
  signedUploadUrls(inputs: [SignedUploadUrlInput!]!): [String!]!
  storageDirNodes(dirPath: String): [StorageNode!]!
}
