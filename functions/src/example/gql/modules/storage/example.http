POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "general.user", "myDirName": "general.user"}

{
  "operationName": "GetUserStorageDirNodes",
  "query": "query GetUserStorageDirNodes { userStorageDirNodes { nodeType name dir path contentType size created updated } }",
  "variables": {}
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "general.user", "myDirName": "general.user"}

{
  "operationName": "GetUserStorageDirNodes",
  "query": "query GetUserStorageDirNodes($dirPath: String) { userStorageDirNodes(dirPath: $dirPath) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "dirPath": "dir1"
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "general.user", "myDirName": "general.user"}

{
  "operationName": "CreateUserStorageDirs",
  "query": "mutation CreateUserStorageDirs($dirPaths: [String!]!) { createUserStorageDirs(dirPaths: $dirPaths) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "dirPaths": [
      "dir1/dir1_1",
      "dir1/dir1_1/dir1_1_1",
      "dir1/dir1_1/dir1_1_2",
      "dir2/dir2_1"
    ]
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "general.user", "myDirName": "general.user"}

{
  "operationName": "RemoveUserStorageDirs",
  "query": "mutation RemoveUserStorageDirs($dirPaths: [String!]!) { removeUserStorageDirs(dirPaths: $dirPaths) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "dirPaths": ["dir1"]
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "general.user", "myDirName": "general.user"}

{
  "operationName": "RemoveUserStorageFiles",
  "query": "mutation RemoveUserStorageFiles($filePaths: [String!]!) { removeUserStorageFiles(filePaths: $filePaths) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "filePaths": [
      "dir1/dir1_1/fileA.txt"
    ]
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "general.user", "myDirName": "general.user"}

{
  "operationName": "MoveUserStorageDir",
  "query": "mutation MoveUserStorageDir($fromDirPath: String!, $toDirPath: String!) { moveUserStorageDir(fromDirPath: $fromDirPath, toDirPath: $toDirPath) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "fromDirPath": "dir1/dir1_1",
    "toDirPath": "dir1/dir1_X"
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "general.user", "myDirName": "general.user"}

{
  "operationName": "MoveUserStorageFile",
  "query": "mutation MoveUserStorageFile($fromFilePath: String!, $toFilePath: String!) { moveUserStorageFile(fromFilePath: $fromFilePath, toFilePath: $toFilePath) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "fromFilePath": "dir1/fileA.txt",
    "toFilePath": "dir1/dir1_1/fileA.txt"
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "general.user", "myDirName": "general.user"}

{
  "operationName": "RenameUserStorageDir",
  "query": "mutation RenameUserStorageDir($dirPath: String!, $newName: String!) { renameUserStorageDir(dirPath: $dirPath, newName: $newName) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "dirPath": "dir1/dir1_1",
    "newName": "dir1_X"
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "general.user", "myDirName": "general.user"}

{
  "operationName": "RenameUserStorageFile",
  "query": "mutation RenameUserStorageFile($filePath: String!, $newName: String!) { renameUserStorageFile(filePath: $filePath, newName: $newName) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "filePath": "dir1/fileA.txt",
    "newName": "fileB.txt"
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "app.admin.user", "myDirName": "app.admin.user", "isAppAdmin": true}

{
  "operationName": "GetSignedUploadUrls",
  "query": "query GetSignedUploadUrls($inputs: [SignedUploadUrlInput!]!) { signedUploadUrls(inputs: $inputs) }",
  "variables": {
    "inputs": [
      {
        "filePath": "images/family.png",
        "contentType": "image/png"
      }
    ]
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "app.admin.user", "myDirName": "app.admin.user", "isAppAdmin": true}

{
  "operationName": "GetStorageDirNodes",
  "query": "query GetStorageDirNodes($dirPath: String) { storageDirNodes(dirPath: $dirPath) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "dirPath": "test-files/dir1"
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "app.admin.user", "myDirName": "app.admin.user", "isAppAdmin": true}

{
  "operationName": "CreateStorageDirs",
  "query": "mutation CreateStorageDirs($dirPaths: [String!]!) { createStorageDirs(dirPaths: $dirPaths) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "dirPaths": [
      "test-files/dir1/dir1_1",
      "test-files/dir1/dir1_1/dir1_1_1",
      "test-files/dir1/dir1_1/dir1_1_2",
      "test-files/dir2/dir2_1"
    ]
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "app.admin.user", "myDirName": "app.admin.user", "isAppAdmin": true}

{
  "operationName": "RemoveStorageDirs",
  "query": "mutation RemoveStorageDirs($dirPaths: [String!]!) { removeStorageDirs(dirPaths: $dirPaths) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "dirPaths": ["test-files/dir1"]
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "app.admin.user", "myDirName": "app.admin.user", "isAppAdmin": true}

{
  "operationName": "RemoveStorageFiles",
  "query": "mutation RemoveStorageFiles($filePaths: [String!]!) { removeStorageFiles(filePaths: $filePaths) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "filePaths": [
      "test-files/dir1/fileA.txt"
    ]
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "app.admin.user", "myDirName": "app.admin.user", "isAppAdmin": true}

{
  "operationName": "MoveStorageDir",
  "query": "mutation MoveStorageDir($fromDirPath: String!, $toDirPath: String!) { moveStorageDir(fromDirPath: $fromDirPath, toDirPath: $toDirPath) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "fromDirPath": "test-files/dir1/dir1_1",
    "toDirPath": "test-files/dir1/dir1_X"
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "app.admin.user", "myDirName": "app.admin.user", "isAppAdmin": true}

{
  "operationName": "MoveStorageFile",
  "query": "mutation MoveStorageFile($fromFilePath: String!, $toFilePath: String!) { moveStorageFile(fromFilePath: $fromFilePath, toFilePath: $toFilePath) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "fromFilePath": "test-files/dir1/fileA.txt",
    "toFilePath": "test-files/dir1/dir1_1/fileA.txt"
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "app.admin.user", "myDirName": "app.admin.user", "isAppAdmin": true}

{
  "operationName": "RenameStorageDir",
  "query": "mutation RenameStorageDir($dirPath: String!, $newName: String!) { renameStorageDir(dirPath: $dirPath, newName: $newName) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "dirPath": "test-files/dir1/dir1_1",
    "newName": "dir1_X"
  }
}

###

POST {{host}}/api/gql
Content-Type: application/json
Authorization: Bearer {"uid": "app.admin.user", "myDirName": "app.admin.user", "isAppAdmin": true}

{
  "operationName": "RenameStorageFile",
  "query": "mutation RenameStorageFile($filePath: String!, $newName: String!) { renameStorageFile(filePath: $filePath, newName: $newName) { nodeType name dir path contentType size created updated } }",
  "variables": {
    "filePath": "test-files/dir1/fileA.txt",
    "newName": "fileB.txt"
  }
}

###
