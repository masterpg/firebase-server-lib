type Mutation {
  createStorageDirs(dirPaths: [String!]!): [StorageNode!]!
  removeStorageDir(dirPath: String!, options: StoragePaginationOptionsInput): StoragePaginationResult!
  removeStorageFile(filePath: String!): StorageNode
  moveStorageDir(fromDirPath: String!, toDirPath: String!, options: StoragePaginationOptionsInput): StoragePaginationResult!
  moveStorageFile(fromFilePath: String!, toFilePath: String!): StorageNode!
  renameStorageDir(dirPath: String!, newName: String!, options: StoragePaginationOptionsInput): StoragePaginationResult!
  renameStorageFile(filePath: String!, newName: String!): StorageNode!
  setStorageDirShareSettings(dirPath: String!, settings: StorageNodeShareSettingsInput): StorageNode!
  setStorageFileShareSettings(filePath: String!, settings: StorageNodeShareSettingsInput): StorageNode!
  handleUploadedFile(filePath: String!): StorageNode!
}

type Query {
  storageNode(nodePath: String!): StorageNode
  storageDirDescendants(dirPath: String, options: StoragePaginationOptionsInput): StoragePaginationResult!
  storageDescendants(dirPath: String, options: StoragePaginationOptionsInput): StoragePaginationResult!
  storageDirChildren(dirPath: String, options: StoragePaginationOptionsInput): StoragePaginationResult!
  storageChildren(dirPath: String, options: StoragePaginationOptionsInput): StoragePaginationResult!
  storageHierarchicalNodes(nodePath: String!): [StorageNode!]!
  storageAncestorDirs(nodePath: String!): [StorageNode!]!
  signedUploadUrls(inputs: [SignedUploadUrlInput!]!): [String!]!
}
